name: Demo
on:
  push:
    branches: [ "demo" ]
  workflow_dispatch:
    inputs:
      workflowDebug:
        description: 'If the workflow should be debugged (skip release)'
        default: true
        type: boolean

permissions:
  contents: write

env:
  VERSION_PREFIX: 0.7.1.101
  VERSION_SUFFIX: -beta

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Cache binaries
      uses: actions/cache@v3
      id: cache-binaries
      with:
        key: ${{ runner.os }}-binaries-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}-${{ hashFiles('Intersect*/**/*.cs*') }}
        path: |
          Intersect*/bin/Release/**/Intersect*

    - name: Cache binaries result
      if: inputs.workflowDebug == true
      run: echo "steps.cache-binaries.outputs.cache-hit='${{ steps.cache-binaries.outputs.cache-hit }}'"

    - name: Cache NuGet dependencies
      if: steps.cache-binaries.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      id: cache-nuget
      with:
        key: ${{ runner.os }}-nuget-${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}-${{ hashFiles('Intersect*/*.csproj') }}
        path: |
          ~/.nuget/packages
          Intersect*/obj/project.assets.json

    - name: Cache nuget result
      if: inputs.workflowDebug == true
      run: echo "steps.cache-nuget.outputs.cache-hit='${{ steps.cache-nuget.outputs.cache-hit }}'"

    - name: Add msbuild to PATH
      if: steps.cache-binaries.outputs.cache-hit != 'true' && steps.cache-nuget.outputs.cache-hit != 'true'
      uses: microsoft/setup-msbuild@v1
      with:
        msbuild-architecture: x64

    - name: Setup NuGet.exe for use with actions
      if: steps.cache-binaries.outputs.cache-hit != 'true' && steps.cache-nuget.outputs.cache-hit != 'true'
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@fd9fffd6ca4541cf4152a9565835ca1a88a6eb37
      uses: NuGet/setup-nuget@v1
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: latest # optional, default is latest
        # NuGet API Key to configure.
        # nuget-api-key: # optional
        # Source to scope the NuGet API Key to.
        # nuget-api-key-source: # optional

    - name: Restore NuGet Packages
      if: steps.cache-binaries.outputs.cache-hit != 'true' && steps.cache-nuget.outputs.cache-hit != 'true'
      run: nuget restore Intersect.sln

    - name: Build solution
      if: steps.cache-binaries.outputs.cache-hit != 'true' && steps.cache-nuget.outputs.cache-hit != 'true'
      run: msbuild Intersect.sln /p:Configuration=Release /p:PackageVersion=${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }} /p:Version=${{ env.VERSION_PREFIX }}

    - name: Package artifacts
      uses: AscensionGameDev/actions@4c9073d0721da476ac9337fbbfe46a9ca1ae4389
      with:
        bundle: .github/bundles/*.json
        version: ${{ env.VERSION_PREFIX }}${{ env.VERSION_SUFFIX }}.${{ github.run_number }}+build.${{ github.sha }}

    - name: Upload demo artifacts
      uses: actions/upload-artifact@v3
      with:
        name: demo
        path: "dist/*.zip"


